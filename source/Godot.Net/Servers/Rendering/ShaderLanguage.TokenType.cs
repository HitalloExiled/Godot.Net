namespace Godot.Net.Servers.Rendering;

public partial class ShaderLanguage
{
    public enum TokenType
    {
        TK_EMPTY,
        TK_IDENTIFIER,
        TK_TRUE,
        TK_FALSE,
        TK_FLOAT_CONSTANT,
        TK_INT_CONSTANT,
        TK_UINT_CONSTANT,
        TK_TYPE_VOID,
        TK_TYPE_BOOL,
        TK_TYPE_BVEC2,
        TK_TYPE_BVEC3,
        TK_TYPE_BVEC4,
        TK_TYPE_INT,
        TK_TYPE_IVEC2,
        TK_TYPE_IVEC3,
        TK_TYPE_IVEC4,
        TK_TYPE_UINT,
        TK_TYPE_UVEC2,
        TK_TYPE_UVEC3,
        TK_TYPE_UVEC4,
        TK_TYPE_FLOAT,
        TK_TYPE_VEC2,
        TK_TYPE_VEC3,
        TK_TYPE_VEC4,
        TK_TYPE_MAT2,
        TK_TYPE_MAT3,
        TK_TYPE_MAT4,
        TK_TYPE_SAMPLER2D,
        TK_TYPE_ISAMPLER2D,
        TK_TYPE_USAMPLER2D,
        TK_TYPE_SAMPLER2DARRAY,
        TK_TYPE_ISAMPLER2DARRAY,
        TK_TYPE_USAMPLER2DARRAY,
        TK_TYPE_SAMPLER3D,
        TK_TYPE_ISAMPLER3D,
        TK_TYPE_USAMPLER3D,
        TK_TYPE_SAMPLERCUBE,
        TK_TYPE_SAMPLERCUBEARRAY,
        TK_INTERPOLATION_FLAT,
        TK_INTERPOLATION_SMOOTH,
        TK_CONST,
        TK_STRUCT,
        TK_PRECISION_LOW,
        TK_PRECISION_MID,
        TK_PRECISION_HIGH,
        TK_OP_EQUAL,
        TK_OP_NOT_EQUAL,
        TK_OP_LESS,
        TK_OP_LESS_EQUAL,
        TK_OP_GREATER,
        TK_OP_GREATER_EQUAL,
        TK_OP_AND,
        TK_OP_OR,
        TK_OP_NOT,
        TK_OP_ADD,
        TK_OP_SUB,
        TK_OP_MUL,
        TK_OP_DIV,
        TK_OP_MOD,
        TK_OP_SHIFT_LEFT,
        TK_OP_SHIFT_RIGHT,
        TK_OP_ASSIGN,
        TK_OP_ASSIGN_ADD,
        TK_OP_ASSIGN_SUB,
        TK_OP_ASSIGN_MUL,
        TK_OP_ASSIGN_DIV,
        TK_OP_ASSIGN_MOD,
        TK_OP_ASSIGN_SHIFT_LEFT,
        TK_OP_ASSIGN_SHIFT_RIGHT,
        TK_OP_ASSIGN_BIT_AND,
        TK_OP_ASSIGN_BIT_OR,
        TK_OP_ASSIGN_BIT_XOR,
        TK_OP_BIT_AND,
        TK_OP_BIT_OR,
        TK_OP_BIT_XOR,
        TK_OP_BIT_INVERT,
        TK_OP_INCREMENT,
        TK_OP_DECREMENT,
        TK_CF_IF,
        TK_CF_ELSE,
        TK_CF_FOR,
        TK_CF_WHILE,
        TK_CF_DO,
        TK_CF_SWITCH,
        TK_CF_CASE,
        TK_CF_DEFAULT,
        TK_CF_BREAK,
        TK_CF_CONTINUE,
        TK_CF_RETURN,
        TK_CF_DISCARD,
        TK_BRACKET_OPEN,
        TK_BRACKET_CLOSE,
        TK_CURLY_BRACKET_OPEN,
        TK_CURLY_BRACKET_CLOSE,
        TK_PARENTHESIS_OPEN,
        TK_PARENTHESIS_CLOSE,
        TK_QUESTION,
        TK_COMMA,
        TK_COLON,
        TK_SEMICOLON,
        TK_PERIOD,
        TK_UNIFORM,
        TK_UNIFORM_GROUP,
        TK_INSTANCE,
        TK_GLOBAL,
        TK_VARYING,
        TK_ARG_IN,
        TK_ARG_OUT,
        TK_ARG_INOUT,
        TK_RENDER_MODE,
        TK_HINT_DEFAULT_WHITE_TEXTURE,
        TK_HINT_DEFAULT_BLACK_TEXTURE,
        TK_HINT_DEFAULT_TRANSPARENT_TEXTURE,
        TK_HINT_NORMAL_TEXTURE,
        TK_HINT_ROUGHNESS_NORMAL_TEXTURE,
        TK_HINT_ROUGHNESS_R,
        TK_HINT_ROUGHNESS_G,
        TK_HINT_ROUGHNESS_B,
        TK_HINT_ROUGHNESS_A,
        TK_HINT_ROUGHNESS_GRAY,
        TK_HINT_ANISOTROPY_TEXTURE,
        TK_HINT_SOURCE_COLOR,
        TK_HINT_RANGE,
        TK_HINT_INSTANCE_INDEX,
        TK_HINT_SCREEN_TEXTURE,
        TK_HINT_NORMAL_ROUGHNESS_TEXTURE,
        TK_HINT_DEPTH_TEXTURE,
        TK_FILTER_NEAREST,
        TK_FILTER_LINEAR,
        TK_FILTER_NEAREST_MIPMAP,
        TK_FILTER_LINEAR_MIPMAP,
        TK_FILTER_NEAREST_MIPMAP_ANISOTROPIC,
        TK_FILTER_LINEAR_MIPMAP_ANISOTROPIC,
        TK_REPEAT_ENABLE,
        TK_REPEAT_DISABLE,
        TK_SHADER_TYPE,
        TK_CURSOR,
        TK_ERROR,
        TK_EOF,
        TK_MAX
    }
}
